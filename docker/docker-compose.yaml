version: '3.8'
services:
  tradingo-api:
    container_name: tradingo-api
    image: tradingo/api
    build:
      context: ../tradingo-api
      dockerfile: Dockerfile
    restart: unless-stopped
    networks:
      - tradingo-network
    ports:
      - 8083:8080

  tradingo-postgres:
    container_name: tradingo-postgres
    image: postgres
    restart: unless-stopped
    volumes:
      - ./postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_URL=jdbc:postgresql://localhost:5432/testdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=tradingopwd
    ports:
      - 5432:5432
    networks:
      - tradingo-network

  tradingo-elasticsearch:
    container_name: tradingo-elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0
    restart: unless-stopped
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - cluster.routing.allocation.disk.threshold_enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
    networks:
      - tradingo-network
  tradingo-kibana:
    container_name: tradingo-kibana
    image: docker.elastic.co/kibana/kibana:7.12.0
    restart: unless-stopped
    ports:
      - 5601:5601
    depends_on:
      - tradingo-elasticsearch
    networks:
      - tradingo-network
  tradingo-prometheus:
    image: prom/prometheus:latest
    container_name: tradingo-prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    user: root
    expose:
      - 9090
    ports:
      - 9090:9090
    networks:
      - tradingo-network

  tradingo-grafana:
    container_name: tradingo-grafana
    image: grafana/grafana:latest
    restart: unless-stopped
    volumes:
      - ./grafana:/var/lib/grafana
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=tradingopwd
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=myrul.com
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=smtp.gmail.com:587
      - GF_SMTP_USER=myadrress@gmail.com
      - GF_SMTP_PASSWORD=mypassword
      - GF_SMTP_FROM_ADDRESS=myaddress@gmail.com
    networks:
      - tradingo-network

  tradingo-zookeeper:
    container_name: tradingo-zookeper
    restart: unless-stopped
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
    volumes:
      - ./zookeper/data:/opt/zookeeper-3.4.13/data
    networks:
      - tradingo-network

  tradingo-kafka:
    container_name: tradingo-kafka
    image: wurstmeister/kafka
    restart: unless-stopped
    depends_on:
      - tradingo-zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: tradingo-kafka
      KAFKA_ZOOKEEPER_CONNECT: tradingo-zookeeper:2181
      KAFKA_CREATE_TOPICS: "t1:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./kafka:/kafka
    networks:
      - tradingo-network

networks:
  tradingo-network:
    driver: bridge
    name: tradingo-network
